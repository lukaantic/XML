version: "3.8"
services:


  gateway:
    image: nginx:1.19.8-alpine
    restart: on-failure
    ports:
      - 8081:8081
    networks:
      - backend
    volumes:
      - ./Gateway/nginx.conf:/etc/nginx/nginx.conf
      - ./Gateway/api_gateway.conf:/etc/nginx/api_gateway.conf
 
  auth:
    image: auth:compose_build
    restart: on-failure
    container_name: auth
    build:
      context: ./authenticationService
      dockerfile: Dockerfile
    networks:
      - backend
    environment:
      - PORT=8081   
    depends_on:
      - auth_baza  

  auth_baza:
    image: postgres
    restart: on-failure
    container_name: auth_baza
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}      
      POSTGRES_DB: ${POSTGRES_DBNAME}
    ports:
      - 5432:5432
    networks:
      - backend

  user-service:
    image: user-service:compose_build
    restart: on-failure
    build:
      context: ./userService
      dockerfile: Dockerfile 
    networks:
      - backend
    environment:
      PORT: ${USER_SERVICE_PORT}
      AUTHENTICATION_SERVICE_DOMAIN: ${AUTHENTICATION_SERVICE_DOMAIN}
      AUTHENTICATION_SERVICE_PORT: ${AUTHENTICATION_SERVICE_PORT}
    depends_on:
      - mongo-db

  post-service:
    image: post-service:compose_build
    restart: on-failure
    build:
      context: ./postService
      dockerfile: Dockerfile 
    networks:
      - backend
    environment:
      PORT: ${POST_SERVICE_PORT}
      USER_SERVICE_DOMAIN: ${USER_SERVICE_DOMAIN}
      USER_SERVICE_PORT: ${USER_SERVICE_PORT}
    depends_on:
      - mongo-db

  mongo-db:
    image: mongo
    restart: on-failure
#    ports:
#      - 27017:27017
    networks:
      - backend

networks:
  backend:
    name: mreza
    driver: bridge